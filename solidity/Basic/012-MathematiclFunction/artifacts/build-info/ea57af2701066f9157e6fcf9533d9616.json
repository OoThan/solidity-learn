{
	"id": "ea57af2701066f9157e6fcf9533d9616",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity/Basic/012-MathematiclFunction/mathematical_function.sol": {
				"content": "pragma solidity >=0.4.16 <0.9.0;\n\ncontract MathFuctionTest {\n    function callAddMod() public pure returns (uint) {\n        return addmod(10, 20, 3);\n    }\n\n    function callMulMod() public pure returns (uint) {\n        return mulmod(10, 20, 3);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity/Basic/012-MathematiclFunction/mathematical_function.sol": {
				"MathFuctionTest": {
					"abi": [
						{
							"inputs": [],
							"name": "callAddMod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callMulMod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":34:253  contract MathFuctionTest {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":34:253  contract MathFuctionTest {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaa4e8744\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf9b41691\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":161:251  function callMulMod() public pure returns (uint) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":65:155  function callAddMod() public pure returns (uint) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":161:251  function callMulMod() public pure returns (uint) {... */\n    tag_6:\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":204:208  uint */\n      0x00\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":242:243  3 */\n      0x03\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":227:244  mulmod(10, 20, 3) */\n      dup1\n      tag_13\n      jumpi\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n    tag_13:\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":238:240  20 */\n      0x14\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":234:236  10 */\n      0x0a\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":227:244  mulmod(10, 20, 3) */\n      mulmod\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":220:244  return mulmod(10, 20, 3) */\n      swap1\n      pop\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":161:251  function callMulMod() public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":65:155  function callAddMod() public pure returns (uint) {... */\n    tag_10:\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":108:112  uint */\n      0x00\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":146:147  3 */\n      0x03\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":131:148  addmod(10, 20, 3) */\n      dup1\n      tag_17\n      jumpi\n      tag_18\n      tag_15\n      jump\t// in\n    tag_18:\n    tag_17:\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":142:144  20 */\n      0x14\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":138:140  10 */\n      0x0a\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":131:148  addmod(10, 20, 3) */\n      addmod\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":124:148  return addmod(10, 20, 3) */\n      swap1\n      pop\n        /* \"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":65:155  function callAddMod() public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_20:\n        /* \"#utility.yul\":94:118   */\n      tag_22\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_8:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_25\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_20\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_23:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_15:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x12\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n\n    auxdata: 0xa2646970667358221220853ff64792b03350e47042be94d1de9f5cfc3c10f2a1c265a325f84a3872cac164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610132806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063aa4e8744146037578063f9b41691146051575b600080fd5b603d606b565b6040516048919060aa565b60405180910390f35b60576084565b6040516062919060aa565b60405180910390f35b6000600380607a57607960cd565b5b6014600a09905090565b6000600380609357609260cd565b5b6014600a08905090565b60a48160c3565b82525050565b600060208201905060bd6000830184609d565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220853ff64792b03350e47042be94d1de9f5cfc3c10f2a1c265a325f84a3872cac164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA4E8744 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xF9B41691 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0xAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0xAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x7A JUMPI PUSH1 0x79 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x14 PUSH1 0xA MULMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x93 JUMPI PUSH1 0x92 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x14 PUSH1 0xA ADDMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA4 DUP2 PUSH1 0xC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBD PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 EXTCODEHASH 0xF6 SELFBALANCE SWAP3 0xB0 CALLER POP 0xE4 PUSH17 0x42BE94D1DE9F5CFC3C10F2A1C265A325F8 0x4A CODESIZE PUSH19 0xCAC164736F6C63430008070033000000000000 ",
							"sourceMap": "34:219:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@callAddMod_13": {
									"entryPoint": 132,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@callMulMod_25": {
									"entryPoint": 107,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:625:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c8063aa4e8744146037578063f9b41691146051575b600080fd5b603d606b565b6040516048919060aa565b60405180910390f35b60576084565b6040516062919060aa565b60405180910390f35b6000600380607a57607960cd565b5b6014600a09905090565b6000600380609357609260cd565b5b6014600a08905090565b60a48160c3565b82525050565b600060208201905060bd6000830184609d565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220853ff64792b03350e47042be94d1de9f5cfc3c10f2a1c265a325f84a3872cac164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA4E8744 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xF9B41691 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0xAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0xAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x7A JUMPI PUSH1 0x79 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x14 PUSH1 0xA MULMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x93 JUMPI PUSH1 0x92 PUSH1 0xCD JUMP JUMPDEST JUMPDEST PUSH1 0x14 PUSH1 0xA ADDMOD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA4 DUP2 PUSH1 0xC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBD PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 EXTCODEHASH 0xF6 SELFBALANCE SWAP3 0xB0 CALLER POP 0xE4 PUSH17 0x42BE94D1DE9F5CFC3C10F2A1C265A325F8 0x4A CODESIZE PUSH19 0xCAC164736F6C63430008070033000000000000 ",
							"sourceMap": "34:219:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;161;204:4;242:1;227:17;;;;;:::i;:::-;;238:2;234;227:17;220:24;;161:90;:::o;65:::-;108:4;146:1;131:17;;;;;:::i;:::-;;142:2;138;131:17;124:24;;65:90;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "61200",
								"executionCost": "111",
								"totalCost": "61311"
							},
							"external": {
								"callAddMod()": "368",
								"callMulMod()": "346"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 253,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220853ff64792b03350e47042be94d1de9f5cfc3c10f2a1c265a325f84a3872cac164736f6c63430008070033",
									".code": [
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "AA4E8744"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "F9B41691"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 161,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 204,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 227,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 227,
											"end": 244,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 65,
											"end": 155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 108,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 131,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 138,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 131,
											"end": 148,
											"name": "ADDMOD",
											"source": 0
										},
										{
											"begin": 124,
											"end": 148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 155,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"callAddMod()": "f9b41691",
							"callMulMod()": "aa4e8744"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"callAddMod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callMulMod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":\"MathFuctionTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity/Basic/012-MathematiclFunction/mathematical_function.sol\":{\"keccak256\":\"0x6e316f09153321b8067f4be988e09288a6c9cb10b368444a689106910980f569\",\"urls\":[\"bzz-raw://80df8df97f69f106a37b2bc6d11d36dd9dc9392c02540e7d07d290fb28a87076\",\"dweb:/ipfs/QmeBoHfz8VWxwkaU3L6BmWSrGZ7bGoGusxMATDcd6fdAh5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> solidity/Basic/012-MathematiclFunction/mathematical_function.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "solidity/Basic/012-MathematiclFunction/mathematical_function.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"solidity/Basic/012-MathematiclFunction/mathematical_function.sol": {
				"ast": {
					"absolutePath": "solidity/Basic/012-MathematiclFunction/mathematical_function.sol",
					"exportedSymbols": {
						"MathFuctionTest": [
							26
						]
					},
					"id": 27,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "MathFuctionTest",
							"nameLocation": "43:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "114:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 7,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "138:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														{
															"hexValue": "3230",
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "142:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														{
															"hexValue": "33",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "146:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 6,
														"name": "addmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967294,
														"src": "131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "131:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 11,
												"nodeType": "Return",
												"src": "124:24:0"
											}
										]
									},
									"functionSelector": "f9b41691",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callAddMod",
									"nameLocation": "74:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "84:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "108:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "108:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:6:0"
									},
									"scope": 26,
									"src": "65:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "210:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "234:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														{
															"hexValue": "3230",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "238:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														{
															"hexValue": "33",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "242:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 18,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967280,
														"src": "227:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "227:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 17,
												"id": 23,
												"nodeType": "Return",
												"src": "220:24:0"
											}
										]
									},
									"functionSelector": "aa4e8744",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMulMod",
									"nameLocation": "170:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "204:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "204:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:6:0"
									},
									"scope": 26,
									"src": "161:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "34:219:0",
							"usedErrors": []
						}
					],
					"src": "0:254:0"
				},
				"id": 0
			}
		}
	}
}