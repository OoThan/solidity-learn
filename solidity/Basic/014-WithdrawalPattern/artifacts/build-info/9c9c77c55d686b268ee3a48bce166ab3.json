{
	"id": "9c9c77c55d686b268ee3a48bce166ab3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol": {
				"content": "pragma solidity >=0.4.16 <0.9.0;\n\ncontract WithdrawalPatternTest1 {\n    address public richest;\n    uint public mostSent;\n\n    mapping (address => uint) pendingWithdrawals;\n\n    constructor() payable {\n        richest = payable(msg.sender);\n        mostSent = msg.value;\n    }\n\n    function becomeRichest() public payable returns (bool) {\n        if (msg.value > mostSent) {\n            pendingWithdrawals[richest] += msg.value;\n            richest = payable(msg.sender);\n            mostSent = msg.value;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function withdraw() public {\n        uint amount = pendingWithdrawals[msg.sender];\n        pendingWithdrawals[msg.sender] = 0;\n        payable(msg.sender).transfer(amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol": {
				"WithdrawalPatternTest1": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "becomeRichest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mostSent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "richest",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":34:775  contract WithdrawalPatternTest1 {... */\n  mstore(0x40, 0x80)\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":228:238  msg.sender */\n  caller\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":210:217  richest */\n  0x00\n  dup1\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":210:239  richest = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":260:269  msg.value */\n  callvalue\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":249:257  mostSent */\n  0x01\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":249:269  mostSent = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":34:775  contract WithdrawalPatternTest1 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":34:775  contract WithdrawalPatternTest1 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02e26c38\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6886bf1c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x69934ee7\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":72:94  address public richest */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":595:773  function withdraw() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":100:120  uint public mostSent */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":282:589  function becomeRichest() public payable returns (bool) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":72:94  address public richest */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":595:773  function withdraw() public {... */\n    tag_13:\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":632:643  uint amount */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":646:664  pendingWithdrawals */\n      0x02\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":646:676  pendingWithdrawals[msg.sender] */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":665:675  msg.sender */\n      caller\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":646:676  pendingWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":632:676  uint amount = pendingWithdrawals[msg.sender] */\n      swap1\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":719:720  0 */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":686:704  pendingWithdrawals */\n      0x02\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":686:716  pendingWithdrawals[msg.sender] */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":705:715  msg.sender */\n      caller\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":686:716  pendingWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":686:720  pendingWithdrawals[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":738:748  msg.sender */\n      caller\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":730:758  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":730:766  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":759:765  amount */\n      dup3\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":730:766  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":622:773  {... */\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":595:773  function withdraw() public {... */\n      jump\t// out\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":100:120  uint public mostSent */\n    tag_16:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":282:589  function becomeRichest() public payable returns (bool) {... */\n    tag_20:\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":331:335  bool */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":363:371  mostSent */\n      sload(0x01)\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":351:360  msg.value */\n      callvalue\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":351:371  msg.value > mostSent */\n      gt\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":347:583  if (msg.value > mostSent) {... */\n      iszero\n      tag_27\n      jumpi\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":418:427  msg.value */\n      callvalue\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":387:405  pendingWithdrawals */\n      0x02\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":387:414  pendingWithdrawals[richest] */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":406:413  richest */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":387:414  pendingWithdrawals[richest] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":387:427  pendingWithdrawals[richest] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":459:469  msg.sender */\n      caller\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":441:448  richest */\n      0x00\n      dup1\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":441:470  richest = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":495:504  msg.value */\n      callvalue\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":484:492  mostSent */\n      0x01\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":484:504  mostSent = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":525:529  true */\n      0x01\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":518:529  return true */\n      swap1\n      pop\n      jump(tag_26)\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":347:583  if (msg.value > mostSent) {... */\n    tag_27:\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":567:572  false */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":560:572  return false */\n      swap1\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":282:589  function becomeRichest() public payable returns (bool) {... */\n    tag_26:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_32:\n        /* \"#utility.yul\":94:118   */\n      tag_34\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:240   */\n    tag_36:\n        /* \"#utility.yul\":212:233   */\n      tag_38\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":212:233   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":207:210   */\n      dup3\n        /* \"#utility.yul\":200:234   */\n      mstore\n        /* \"#utility.yul\":131:240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":246:364   */\n    tag_40:\n        /* \"#utility.yul\":333:357   */\n      tag_42\n        /* \"#utility.yul\":351:356   */\n      dup2\n        /* \"#utility.yul\":333:357   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":328:331   */\n      dup3\n        /* \"#utility.yul\":321:358   */\n      mstore\n        /* \"#utility.yul\":246:364   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":370:592   */\n    tag_10:\n        /* \"#utility.yul\":463:467   */\n      0x00\n        /* \"#utility.yul\":501:503   */\n      0x20\n        /* \"#utility.yul\":490:499   */\n      dup3\n        /* \"#utility.yul\":486:504   */\n      add\n        /* \"#utility.yul\":478:504   */\n      swap1\n      pop\n        /* \"#utility.yul\":514:585   */\n      tag_45\n        /* \"#utility.yul\":582:583   */\n      0x00\n        /* \"#utility.yul\":571:580   */\n      dup4\n        /* \"#utility.yul\":567:584   */\n      add\n        /* \"#utility.yul\":558:564   */\n      dup5\n        /* \"#utility.yul\":514:585   */\n      tag_32\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":370:592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":598:808   */\n    tag_22:\n        /* \"#utility.yul\":685:689   */\n      0x00\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":712:721   */\n      dup3\n        /* \"#utility.yul\":708:726   */\n      add\n        /* \"#utility.yul\":700:726   */\n      swap1\n      pop\n        /* \"#utility.yul\":736:801   */\n      tag_47\n        /* \"#utility.yul\":798:799   */\n      0x00\n        /* \"#utility.yul\":787:796   */\n      dup4\n        /* \"#utility.yul\":783:800   */\n      add\n        /* \"#utility.yul\":774:780   */\n      dup5\n        /* \"#utility.yul\":736:801   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":598:808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":814:1036   */\n    tag_18:\n        /* \"#utility.yul\":907:911   */\n      0x00\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup3\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":922:948   */\n      swap1\n      pop\n        /* \"#utility.yul\":958:1029   */\n      tag_49\n        /* \"#utility.yul\":1026:1027   */\n      0x00\n        /* \"#utility.yul\":1015:1024   */\n      dup4\n        /* \"#utility.yul\":1011:1028   */\n      add\n        /* \"#utility.yul\":1002:1008   */\n      dup5\n        /* \"#utility.yul\":958:1029   */\n      tag_40\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":814:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1347   */\n    tag_29:\n        /* \"#utility.yul\":1082:1085   */\n      0x00\n        /* \"#utility.yul\":1101:1121   */\n      tag_51\n        /* \"#utility.yul\":1119:1120   */\n      dup3\n        /* \"#utility.yul\":1101:1121   */\n      tag_43\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1096:1121   */\n      swap2\n      pop\n        /* \"#utility.yul\":1135:1155   */\n      tag_52\n        /* \"#utility.yul\":1153:1154   */\n      dup4\n        /* \"#utility.yul\":1135:1155   */\n      tag_43\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1130:1155   */\n      swap3\n      pop\n        /* \"#utility.yul\":1289:1290   */\n      dup3\n        /* \"#utility.yul\":1221:1287   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1217:1291   */\n      sub\n        /* \"#utility.yul\":1214:1215   */\n      dup3\n        /* \"#utility.yul\":1211:1292   */\n      gt\n        /* \"#utility.yul\":1208:1315   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1295:1313   */\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1208:1315   */\n    tag_53:\n        /* \"#utility.yul\":1339:1340   */\n      dup3\n        /* \"#utility.yul\":1336:1337   */\n      dup3\n        /* \"#utility.yul\":1332:1341   */\n      add\n        /* \"#utility.yul\":1325:1341   */\n      swap1\n      pop\n        /* \"#utility.yul\":1042:1347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1353:1449   */\n    tag_35:\n        /* \"#utility.yul\":1390:1397   */\n      0x00\n        /* \"#utility.yul\":1419:1443   */\n      tag_57\n        /* \"#utility.yul\":1437:1442   */\n      dup3\n        /* \"#utility.yul\":1419:1443   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1408:1443   */\n      swap1\n      pop\n        /* \"#utility.yul\":1353:1449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1545   */\n    tag_39:\n        /* \"#utility.yul\":1489:1496   */\n      0x00\n        /* \"#utility.yul\":1532:1537   */\n      dup2\n        /* \"#utility.yul\":1525:1538   */\n      iszero\n        /* \"#utility.yul\":1518:1539   */\n      iszero\n        /* \"#utility.yul\":1507:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1455:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1677   */\n    tag_58:\n        /* \"#utility.yul\":1588:1595   */\n      0x00\n        /* \"#utility.yul\":1628:1670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1621:1626   */\n      dup3\n        /* \"#utility.yul\":1617:1671   */\n      and\n        /* \"#utility.yul\":1606:1671   */\n      swap1\n      pop\n        /* \"#utility.yul\":1551:1677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1683:1760   */\n    tag_43:\n        /* \"#utility.yul\":1720:1727   */\n      0x00\n        /* \"#utility.yul\":1749:1754   */\n      dup2\n        /* \"#utility.yul\":1738:1754   */\n      swap1\n      pop\n        /* \"#utility.yul\":1683:1760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1766:1946   */\n    tag_55:\n        /* \"#utility.yul\":1814:1891   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1811:1812   */\n      0x00\n        /* \"#utility.yul\":1804:1892   */\n      mstore\n        /* \"#utility.yul\":1911:1915   */\n      0x11\n        /* \"#utility.yul\":1908:1909   */\n      0x04\n        /* \"#utility.yul\":1901:1916   */\n      mstore\n        /* \"#utility.yul\":1935:1939   */\n      0x24\n        /* \"#utility.yul\":1932:1933   */\n      0x00\n        /* \"#utility.yul\":1925:1940   */\n      revert\n\n    auxdata: 0xa26469706673582212207bfc99e14ebf7d7334e939b18929482a272070bdc25f159141c5c6de964b4cb964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506104288061005a6000396000f3fe60806040526004361061003f5760003560e01c806302e26c38146100445780633ccfd60b1461006f5780636886bf1c1461008657806369934ee7146100b1575b600080fd5b34801561005057600080fd5b506100596100cf565b60405161006691906102d4565b60405180910390f35b34801561007b57600080fd5b506100846100f3565b005b34801561009257600080fd5b5061009b6101c6565b6040516100a8919061030a565b60405180910390f35b6100b96101cc565b6040516100c691906102ef565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101c2573d6000803e3d6000fd5b5050565b60015481565b600060015434111561029f5734600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102489190610325565b92505081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550600190506102a4565b600090505b90565b6102b08161037b565b82525050565b6102bf8161038d565b82525050565b6102ce816103b9565b82525050565b60006020820190506102e960008301846102a7565b92915050565b600060208201905061030460008301846102b6565b92915050565b600060208201905061031f60008301846102c5565b92915050565b6000610330826103b9565b915061033b836103b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103705761036f6103c3565b5b828201905092915050565b600061038682610399565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207bfc99e14ebf7d7334e939b18929482a272070bdc25f159141c5c6de964b4cb964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x428 DUP1 PUSH2 0x5A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E26C38 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6886BF1C EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT ISZERO PUSH2 0x29F JUMPI CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x325 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2B0 DUP2 PUSH2 0x37B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH2 0x38D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x304 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330 DUP3 PUSH2 0x3B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x33B DUP4 PUSH2 0x3B9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x3C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386 DUP3 PUSH2 0x399 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xFC99E14EBF7D7334E939B18929482A272070BDC25F159141C5C6DE96 0x4B 0x4C 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "34:741:0:-:0;;;228:10;210:7;;:29;;;;;;;;;;;;;;;;;;260:9;249:8;:20;;;;34:741;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@becomeRichest_63": {
									"entryPoint": 460,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mostSent_5": {
									"entryPoint": 454,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@richest_3": {
									"entryPoint": 207,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_90": {
									"entryPoint": 243,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1949:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "190:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "207:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "212:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "212:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "178:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "185:3:1",
														"type": ""
													}
												],
												"src": "131:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "311:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "328:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "351:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "333:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "333:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "321:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "321:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "321:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "299:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "306:3:1",
														"type": ""
													}
												],
												"src": "246:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "468:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "478:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "490:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "501:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "478:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "558:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "582:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "514:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "514:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "440:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "452:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "463:4:1",
														"type": ""
													}
												],
												"src": "370:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "712:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "787:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "798:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "736:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "736:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "685:4:1",
														"type": ""
													}
												],
												"src": "598:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "930:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "922:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1002:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1026:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "958:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "884:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "896:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "907:4:1",
														"type": ""
													}
												],
												"src": "814:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1086:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1096:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1119:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1101:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1096:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1130:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1153:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1135:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1130:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1293:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1295:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1295:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1295:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1214:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1221:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1289:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1211:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:81:1"
															},
															"nodeType": "YulIf",
															"src": "1208:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1325:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1336:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1339:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1332:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1325:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1073:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1076:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1082:3:1",
														"type": ""
													}
												],
												"src": "1042:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1437:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1419:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1408:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1380:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1390:7:1",
														"type": ""
													}
												],
												"src": "1353:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1507:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1532:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1507:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1479:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1489:7:1",
														"type": ""
													}
												],
												"src": "1455:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1596:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1621:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1588:7:1",
														"type": ""
													}
												],
												"src": "1551:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1738:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1749:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1720:7:1",
														"type": ""
													}
												],
												"src": "1683:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1794:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1811:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1804:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1804:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1908:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1911:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1901:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1901:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1766:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c806302e26c38146100445780633ccfd60b1461006f5780636886bf1c1461008657806369934ee7146100b1575b600080fd5b34801561005057600080fd5b506100596100cf565b60405161006691906102d4565b60405180910390f35b34801561007b57600080fd5b506100846100f3565b005b34801561009257600080fd5b5061009b6101c6565b6040516100a8919061030a565b60405180910390f35b6100b96101cc565b6040516100c691906102ef565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101c2573d6000803e3d6000fd5b5050565b60015481565b600060015434111561029f5734600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102489190610325565b92505081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550600190506102a4565b600090505b90565b6102b08161037b565b82525050565b6102bf8161038d565b82525050565b6102ce816103b9565b82525050565b60006020820190506102e960008301846102a7565b92915050565b600060208201905061030460008301846102b6565b92915050565b600060208201905061031f60008301846102c5565b92915050565b6000610330826103b9565b915061033b836103b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103705761036f6103c3565b5b828201905092915050565b600061038682610399565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207bfc99e14ebf7d7334e939b18929482a272070bdc25f159141c5c6de964b4cb964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E26C38 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6886BF1C EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT ISZERO PUSH2 0x29F JUMPI CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x325 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2B0 DUP2 PUSH2 0x37B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH2 0x38D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x304 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330 DUP3 PUSH2 0x3B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x33B DUP4 PUSH2 0x3B9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x3C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386 DUP3 PUSH2 0x399 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xFC99E14EBF7D7334E939B18929482A272070BDC25F159141C5C6DE96 0x4B 0x4C 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "34:741:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;72:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:178;;;;;;;;;;;;;:::i;:::-;;100:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;282:307;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;72:22;;;;;;;;;;;;:::o;595:178::-;632:11;646:18;:30;665:10;646:30;;;;;;;;;;;;;;;;632:44;;719:1;686:18;:30;705:10;686:30;;;;;;;;;;;;;;;:34;;;;738:10;730:28;;:36;759:6;730:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;622:151;595:178::o;100:20::-;;;;:::o;282:307::-;331:4;363:8;;351:9;:20;347:236;;;418:9;387:18;:27;406:7;;;;;;;;;;;387:27;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;459:10;441:7;;:29;;;;;;;;;;;;;;;;;;495:9;484:8;:20;;;;525:4;518:11;;;;347:236;567:5;560:12;;282:307;;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:109::-;212:21;227:5;212:21;:::i;:::-;207:3;200:34;131:109;;:::o;246:118::-;333:24;351:5;333:24;:::i;:::-;328:3;321:37;246:118;;:::o;370:222::-;463:4;501:2;490:9;486:18;478:26;;514:71;582:1;571:9;567:17;558:6;514:71;:::i;:::-;370:222;;;;:::o;598:210::-;685:4;723:2;712:9;708:18;700:26;;736:65;798:1;787:9;783:17;774:6;736:65;:::i;:::-;598:210;;;;:::o;814:222::-;907:4;945:2;934:9;930:18;922:26;;958:71;1026:1;1015:9;1011:17;1002:6;958:71;:::i;:::-;814:222;;;;:::o;1042:305::-;1082:3;1101:20;1119:1;1101:20;:::i;:::-;1096:25;;1135:20;1153:1;1135:20;:::i;:::-;1130:25;;1289:1;1221:66;1217:74;1214:1;1211:81;1208:107;;;1295:18;;:::i;:::-;1208:107;1339:1;1336;1332:9;1325:16;;1042:305;;;;:::o;1353:96::-;1390:7;1419:24;1437:5;1419:24;:::i;:::-;1408:35;;1353:96;;;:::o;1455:90::-;1489:7;1532:5;1525:13;1518:21;1507:32;;1455:90;;;:::o;1551:126::-;1588:7;1628:42;1621:5;1617:54;1606:65;;1551:126;;;:::o;1683:77::-;1720:7;1749:5;1738:16;;1683:77;;;:::o;1766:180::-;1814:77;1811:1;1804:88;1911:4;1908:1;1901:15;1935:4;1932:1;1925:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "212800",
								"executionCost": "46612",
								"totalCost": "259412"
							},
							"external": {
								"becomeRichest()": "infinite",
								"mostSent()": "2451",
								"richest()": "2489",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 34,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34,
									"end": 775,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 228,
									"end": 238,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 210,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 210,
									"end": 239,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 210,
									"end": 239,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 210,
									"end": 239,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 210,
									"end": 239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 260,
									"end": 269,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 249,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 249,
									"end": 269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 249,
									"end": 269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 249,
									"end": 269,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34,
									"end": 775,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 775,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 775,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 775,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 775,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bfc99e14ebf7d7334e939b18929482a272070bdc25f159141c5c6de964b4cb964736f6c63430008070033",
									".code": [
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "2E26C38"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "6886BF1C"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "69934EE7"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72,
											"end": 94,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72,
											"end": 94,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 595,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 646,
											"end": 676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 719,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 686,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 716,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 686,
											"end": 720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 720,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 686,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 738,
											"end": 748,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 730,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 351,
											"end": 360,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 371,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 347,
											"end": 583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 347,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 347,
											"end": 583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 418,
											"end": 427,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 387,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 413,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 406,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 387,
											"end": 427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 387,
											"end": 427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 427,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 387,
											"end": 427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 387,
											"end": 427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 469,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 441,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 441,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 504,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 518,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 518,
											"end": 529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 518,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 518,
											"end": 529,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 347,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 347,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 589,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 131,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 212,
											"end": 233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 212,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 207,
											"end": 210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 200,
											"end": 234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 131,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 351,
											"end": 356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 333,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 333,
											"end": 357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 333,
											"end": 357,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 333,
											"end": 357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 321,
											"end": 358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 246,
											"end": 364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 364,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 370,
											"end": 592,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 463,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 486,
											"end": 504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 478,
											"end": 504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 478,
											"end": 504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 514,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 582,
											"end": 583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 567,
											"end": 584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 558,
											"end": 564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 514,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 514,
											"end": 585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 585,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 514,
											"end": 585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 370,
											"end": 592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 370,
											"end": 592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 370,
											"end": 592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 370,
											"end": 592,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 808,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 598,
											"end": 808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 685,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 798,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 796,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 774,
											"end": 780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 736,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 736,
											"end": 801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 801,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 736,
											"end": 801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 598,
											"end": 808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 598,
											"end": 808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 808,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 814,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 814,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 922,
											"end": 948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 1029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 1029,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 958,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 814,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 814,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 814,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 814,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 814,
											"end": 1036,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1042,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1101,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1101,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1101,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1153,
											"end": 1154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1135,
											"end": 1155,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1135,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1291,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1292,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1315,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1208,
											"end": 1315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1208,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1347,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1347,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1353,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1455,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1551,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1677,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1683,
											"end": 1760,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1683,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1760,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1766,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1766,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1891,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1811,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1915,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1932,
											"end": 1933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"becomeRichest()": "69934ee7",
							"mostSent()": "6886bf1c",
							"richest()": "02e26c38",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"becomeRichest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mostSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"richest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":\"WithdrawalPatternTest1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\":{\"keccak256\":\"0xcd2acf8d264dc7e4167c434d8e81cb76adeda8d65c650e2016f8c53cb15111f7\",\"urls\":[\"bzz-raw://5b7025f90569b68b9fb9f422d785a14cc74d5e1274a516140fb5815d1869dae2\",\"dweb:/ipfs/QmRitJnfRBkrLB6idMg64kPL4QVev2EkrkGP29rpwEx7Ff\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol:WithdrawalPatternTest1",
								"label": "richest",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol:WithdrawalPatternTest1",
								"label": "mostSent",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol:WithdrawalPatternTest1",
								"label": "pendingWithdrawals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol": {
				"ast": {
					"absolutePath": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern1.sol",
					"exportedSymbols": {
						"WithdrawalPatternTest1": [
							91
						]
					},
					"id": 92,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "WithdrawalPatternTest1",
							"nameLocation": "43:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "02e26c38",
									"id": 3,
									"mutability": "mutable",
									"name": "richest",
									"nameLocation": "87:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "72:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "72:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6886bf1c",
									"id": 5,
									"mutability": "mutable",
									"name": "mostSent",
									"nameLocation": "112:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "100:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "100:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "pendingWithdrawals",
									"nameLocation": "153:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "127:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "136:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "127:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 7,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "147:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "200:76:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "richest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "228:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "220:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 13,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "220:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "220:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "210:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "210:29:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "249:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "260:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "260:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "249:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "249:20:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:0:0"
									},
									"scope": 91,
									"src": "178:98:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "337:252:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 31,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "351:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "351:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 33,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "363:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "351:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 60,
													"nodeType": "Block",
													"src": "546:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "567:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 30,
															"id": 59,
															"nodeType": "Return",
															"src": "560:12:0"
														}
													]
												},
												"id": 61,
												"nodeType": "IfStatement",
												"src": "347:236:0",
												"trueBody": {
													"id": 57,
													"nodeType": "Block",
													"src": "373:167:0",
													"statements": [
														{
															"expression": {
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 35,
																		"name": "pendingWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "387:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 37,
																	"indexExpression": {
																		"id": 36,
																		"name": "richest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "387:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 38,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "418:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "418:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "387:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 41,
															"nodeType": "ExpressionStatement",
															"src": "387:40:0"
														},
														{
															"expression": {
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 42,
																	"name": "richest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "441:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 45,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "459:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 46,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "459:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "451:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 43,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "451:8:0",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "451:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "441:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 49,
															"nodeType": "ExpressionStatement",
															"src": "441:29:0"
														},
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 50,
																	"name": "mostSent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "484:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 51,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "495:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "495:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "484:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "484:20:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "525:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 30,
															"id": 56,
															"nodeType": "Return",
															"src": "518:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "69934ee7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "becomeRichest",
									"nameLocation": "291:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "331:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "331:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:6:0"
									},
									"scope": 91,
									"src": "282:307:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "622:151:0",
										"statements": [
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "637:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "632:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 66,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "632:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"baseExpression": {
														"id": 68,
														"name": "pendingWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "646:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 71,
													"indexExpression": {
														"expression": {
															"id": 69,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "665:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "665:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "646:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "632:44:0"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 73,
															"name": "pendingWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "686:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 76,
														"indexExpression": {
															"expression": {
																"id": 74,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "705:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "705:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "686:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "719:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "686:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "686:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "759:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 82,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "738:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "738:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "730:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "730:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "730:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "730:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "730:36:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "604:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:0:0"
									},
									"scope": 91,
									"src": "595:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 92,
							"src": "34:741:0",
							"usedErrors": []
						}
					],
					"src": "0:776:0"
				},
				"id": 0
			}
		}
	}
}