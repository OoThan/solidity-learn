{
	"id": "208a208b2d9533770f781edcd8b0a14b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol": {
				"content": "pragma solidity >=0.4.16 <0.9.0;\n\ncontract WithdrawalPatternTest {\n    address payable public richest;\n    uint public mostSent;\n\n    constructor() payable {\n        richest = payable(msg.sender);\n        mostSent = msg.value;\n    }\n\n    function becomeRichest() public payable returns (bool) {\n        if (msg.value > mostSent) {\n            // Insecure practice\n            richest.transfer(msg.value);\n            richest = payable(msg.sender);\n            mostSent = msg.value;\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol": {
				"WithdrawalPatternTest": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "becomeRichest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mostSent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "richest",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":34:567  contract WithdrawalPatternTest {... */\n  mstore(0x40, 0x80)\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":184:194  msg.sender */\n  caller\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":166:173  richest */\n  0x00\n  dup1\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":166:195  richest = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":216:225  msg.value */\n  callvalue\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":205:213  mostSent */\n  0x01\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":205:225  mostSent = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":34:567  contract WithdrawalPatternTest {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":34:567  contract WithdrawalPatternTest {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02e26c38\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6886bf1c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x69934ee7\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":71:101  address payable public richest */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":107:127  uint public mostSent */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":238:565  function becomeRichest() public payable returns (bool) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":71:101  address payable public richest */\n    tag_7:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":107:127  uint public mostSent */\n    tag_12:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":238:565  function becomeRichest() public payable returns (bool) {... */\n    tag_16:\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":287:291  bool */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":319:327  mostSent */\n      sload(0x01)\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":307:316  msg.value */\n      callvalue\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":307:327  msg.value > mostSent */\n      gt\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":303:559  if (msg.value > mostSent) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":376:383  richest */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":376:392  richest.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":376:403  richest.transfer(msg.value) */\n      0x08fc\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":393:402  msg.value */\n      callvalue\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":376:403  richest.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":435:445  msg.sender */\n      caller\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":417:424  richest */\n      0x00\n      dup1\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":417:446  richest = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":471:480  msg.value */\n      callvalue\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":460:468  mostSent */\n      0x01\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":460:480  mostSent = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":501:505  true */\n      0x01\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":494:505  return true */\n      swap1\n      pop\n      jump(tag_19)\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":303:559  if (msg.value > mostSent) {... */\n    tag_20:\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":543:548  false */\n      0x00\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":536:548  return false */\n      swap1\n      pop\n        /* \"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":238:565  function becomeRichest() public payable returns (bool) {... */\n    tag_19:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:149   */\n    tag_25:\n        /* \"#utility.yul\":110:142   */\n      tag_27\n        /* \"#utility.yul\":136:141   */\n      dup2\n        /* \"#utility.yul\":110:142   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":105:108   */\n      dup3\n        /* \"#utility.yul\":98:143   */\n      mstore\n        /* \"#utility.yul\":7:149   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":155:264   */\n    tag_29:\n        /* \"#utility.yul\":236:257   */\n      tag_31\n        /* \"#utility.yul\":251:256   */\n      dup2\n        /* \"#utility.yul\":236:257   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":231:234   */\n      dup3\n        /* \"#utility.yul\":224:258   */\n      mstore\n        /* \"#utility.yul\":155:264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":270:388   */\n    tag_33:\n        /* \"#utility.yul\":357:381   */\n      tag_35\n        /* \"#utility.yul\":375:380   */\n      dup2\n        /* \"#utility.yul\":357:381   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":352:355   */\n      dup3\n        /* \"#utility.yul\":345:382   */\n      mstore\n        /* \"#utility.yul\":270:388   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":394:648   */\n    tag_9:\n        /* \"#utility.yul\":503:507   */\n      0x00\n        /* \"#utility.yul\":541:543   */\n      0x20\n        /* \"#utility.yul\":530:539   */\n      dup3\n        /* \"#utility.yul\":526:544   */\n      add\n        /* \"#utility.yul\":518:544   */\n      swap1\n      pop\n        /* \"#utility.yul\":554:641   */\n      tag_38\n        /* \"#utility.yul\":638:639   */\n      0x00\n        /* \"#utility.yul\":627:636   */\n      dup4\n        /* \"#utility.yul\":623:640   */\n      add\n        /* \"#utility.yul\":614:620   */\n      dup5\n        /* \"#utility.yul\":554:641   */\n      tag_25\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":394:648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":654:864   */\n    tag_18:\n        /* \"#utility.yul\":741:745   */\n      0x00\n        /* \"#utility.yul\":779:781   */\n      0x20\n        /* \"#utility.yul\":768:777   */\n      dup3\n        /* \"#utility.yul\":764:782   */\n      add\n        /* \"#utility.yul\":756:782   */\n      swap1\n      pop\n        /* \"#utility.yul\":792:857   */\n      tag_40\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":843:852   */\n      dup4\n        /* \"#utility.yul\":839:856   */\n      add\n        /* \"#utility.yul\":830:836   */\n      dup5\n        /* \"#utility.yul\":792:857   */\n      tag_29\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":654:864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":870:1092   */\n    tag_14:\n        /* \"#utility.yul\":963:967   */\n      0x00\n        /* \"#utility.yul\":1001:1003   */\n      0x20\n        /* \"#utility.yul\":990:999   */\n      dup3\n        /* \"#utility.yul\":986:1004   */\n      add\n        /* \"#utility.yul\":978:1004   */\n      swap1\n      pop\n        /* \"#utility.yul\":1014:1085   */\n      tag_42\n        /* \"#utility.yul\":1082:1083   */\n      0x00\n        /* \"#utility.yul\":1071:1080   */\n      dup4\n        /* \"#utility.yul\":1067:1084   */\n      add\n        /* \"#utility.yul\":1058:1064   */\n      dup5\n        /* \"#utility.yul\":1014:1085   */\n      tag_33\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":870:1092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1098:1202   */\n    tag_28:\n        /* \"#utility.yul\":1143:1150   */\n      0x00\n        /* \"#utility.yul\":1172:1196   */\n      tag_44\n        /* \"#utility.yul\":1190:1195   */\n      dup3\n        /* \"#utility.yul\":1172:1196   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1161:1196   */\n      swap1\n      pop\n        /* \"#utility.yul\":1098:1202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1208:1298   */\n    tag_32:\n        /* \"#utility.yul\":1242:1249   */\n      0x00\n        /* \"#utility.yul\":1285:1290   */\n      dup2\n        /* \"#utility.yul\":1278:1291   */\n      iszero\n        /* \"#utility.yul\":1271:1292   */\n      iszero\n        /* \"#utility.yul\":1260:1292   */\n      swap1\n      pop\n        /* \"#utility.yul\":1208:1298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1304:1430   */\n    tag_45:\n        /* \"#utility.yul\":1341:1348   */\n      0x00\n        /* \"#utility.yul\":1381:1423   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1374:1379   */\n      dup3\n        /* \"#utility.yul\":1370:1424   */\n      and\n        /* \"#utility.yul\":1359:1424   */\n      swap1\n      pop\n        /* \"#utility.yul\":1304:1430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1436:1513   */\n    tag_36:\n        /* \"#utility.yul\":1473:1480   */\n      0x00\n        /* \"#utility.yul\":1502:1507   */\n      dup2\n        /* \"#utility.yul\":1491:1507   */\n      swap1\n      pop\n        /* \"#utility.yul\":1436:1513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b2961581c776a7aab4777ddf1a879c766e588251db326040d2b6cd0d0e5bdf4764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460018190555061029e8061005a6000396000f3fe6080604052600436106100345760003560e01c806302e26c38146100395780636886bf1c1461006457806369934ee71461008f575b600080fd5b34801561004557600080fd5b5061004e6100ad565b60405161005b91906101cf565b60405180910390f35b34801561007057600080fd5b506100796100d1565b6040516100869190610205565b60405180910390f35b6100976100d7565b6040516100a491906101ea565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600060015434111561019a5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610149573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506001905061019f565b600090505b90565b6101ab81610220565b82525050565b6101ba81610232565b82525050565b6101c98161025e565b82525050565b60006020820190506101e460008301846101a2565b92915050565b60006020820190506101ff60008301846101b1565b92915050565b600060208201905061021a60008301846101c0565b92915050565b600061022b8261023e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220b2961581c776a7aab4777ddf1a879c766e588251db326040d2b6cd0d0e5bdf4764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x29E DUP1 PUSH2 0x5A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E26C38 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6886BF1C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x19F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x220 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x232 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x25E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B DUP3 PUSH2 0x23E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP7 ISZERO DUP2 0xC7 PUSH23 0xA7AAB4777DDF1A879C766E588251DB326040D2B6CD0D0E JUMPDEST 0xDF SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "34:533:0:-:0;;;184:10;166:7;;:29;;;;;;;;;;;;;;;;;;216:9;205:8;:20;;;;34:533;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@becomeRichest_59": {
									"entryPoint": 215,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mostSent_5": {
									"entryPoint": 209,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@richest_3": {
									"entryPoint": 173,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1516:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "105:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "136:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "110:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "110:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "98:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "98:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "98:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "76:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "83:3:1",
														"type": ""
													}
												],
												"src": "7:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "231:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "251:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "236:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "224:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "202:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "209:3:1",
														"type": ""
													}
												],
												"src": "155:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "335:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "352:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "375:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "357:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "323:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "330:3:1",
														"type": ""
													}
												],
												"src": "270:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "518:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "541:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "518:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "614:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "638:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "554:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "554:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "480:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "492:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "503:4:1",
														"type": ""
													}
												],
												"src": "394:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "746:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "756:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "768:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "764:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "756:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "830:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "792:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "792:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "718:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "730:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "741:4:1",
														"type": ""
													}
												],
												"src": "654:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "968:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "978:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "990:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1001:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "978:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1058:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1071:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1082:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1067:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1014:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1014:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1014:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "940:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "952:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "963:4:1",
														"type": ""
													}
												],
												"src": "870:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1161:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1190:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1172:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1161:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1133:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1143:7:1",
														"type": ""
													}
												],
												"src": "1098:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1250:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1260:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1285:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1260:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1232:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1242:7:1",
														"type": ""
													}
												],
												"src": "1208:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1349:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1359:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1374:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1381:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1359:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1331:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1341:7:1",
														"type": ""
													}
												],
												"src": "1304:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1502:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1491:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1473:7:1",
														"type": ""
													}
												],
												"src": "1436:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806302e26c38146100395780636886bf1c1461006457806369934ee71461008f575b600080fd5b34801561004557600080fd5b5061004e6100ad565b60405161005b91906101cf565b60405180910390f35b34801561007057600080fd5b506100796100d1565b6040516100869190610205565b60405180910390f35b6100976100d7565b6040516100a491906101ea565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600060015434111561019a5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610149573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506001905061019f565b600090505b90565b6101ab81610220565b82525050565b6101ba81610232565b82525050565b6101c98161025e565b82525050565b60006020820190506101e460008301846101a2565b92915050565b60006020820190506101ff60008301846101b1565b92915050565b600060208201905061021a60008301846101c0565b92915050565b600061022b8261023e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220b2961581c776a7aab4777ddf1a879c766e588251db326040d2b6cd0d0e5bdf4764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E26C38 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6886BF1C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x19F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x220 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x232 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x25E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B DUP3 PUSH2 0x23E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP7 ISZERO DUP2 0xC7 PUSH23 0xA7AAB4777DDF1A879C766E588251DB326040D2B6CD0D0E JUMPDEST 0xDF SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "34:533:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;71:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;107:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;238:327;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;71:30;;;;;;;;;;;;:::o;107:20::-;;;;:::o;238:327::-;287:4;319:8;;307:9;:20;303:256;;;376:7;;;;;;;;;;:16;;:27;393:9;376:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:10;417:7;;:29;;;;;;;;;;;;;;;;;;471:9;460:8;:20;;;;501:4;494:11;;;;303:256;543:5;536:12;;238:327;;:::o;7:142:1:-;110:32;136:5;110:32;:::i;:::-;105:3;98:45;7:142;;:::o;155:109::-;236:21;251:5;236:21;:::i;:::-;231:3;224:34;155:109;;:::o;270:118::-;357:24;375:5;357:24;:::i;:::-;352:3;345:37;270:118;;:::o;394:254::-;503:4;541:2;530:9;526:18;518:26;;554:87;638:1;627:9;623:17;614:6;554:87;:::i;:::-;394:254;;;;:::o;654:210::-;741:4;779:2;768:9;764:18;756:26;;792:65;854:1;843:9;839:17;830:6;792:65;:::i;:::-;654:210;;;;:::o;870:222::-;963:4;1001:2;990:9;986:18;978:26;;1014:71;1082:1;1071:9;1067:17;1058:6;1014:71;:::i;:::-;870:222;;;;:::o;1098:104::-;1143:7;1172:24;1190:5;1172:24;:::i;:::-;1161:35;;1098:104;;;:::o;1208:90::-;1242:7;1285:5;1278:13;1271:21;1260:32;;1208:90;;;:::o;1304:126::-;1341:7;1381:42;1374:5;1370:54;1359:65;;1304:126;;;:::o;1436:77::-;1473:7;1502:5;1491:16;;1436:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "134000",
								"executionCost": "46532",
								"totalCost": "180532"
							},
							"external": {
								"becomeRichest()": "infinite",
								"mostSent()": "2429",
								"richest()": "2489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 34,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34,
									"end": 567,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 194,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 166,
									"end": 173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 166,
									"end": 195,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 166,
									"end": 195,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 166,
									"end": 195,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 195,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 216,
									"end": 225,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 205,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 205,
									"end": 225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 205,
									"end": 225,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 205,
									"end": 225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34,
									"end": 567,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 567,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 567,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 567,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2961581c776a7aab4777ddf1a879c766e588251db326040d2b6cd0d0e5bdf4764736f6c63430008070033",
									".code": [
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "2E26C38"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "6886BF1C"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "69934EE7"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 567,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71,
											"end": 101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71,
											"end": 101,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 127,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 316,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 327,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 303,
											"end": 559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 303,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 376,
											"end": 383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 376,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 376,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 445,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 417,
											"end": 446,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 417,
											"end": 446,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 417,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 480,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 460,
											"end": 480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 480,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 494,
											"end": 505,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 559,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 543,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 565,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 149,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 136,
											"end": 141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 105,
											"end": 108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 98,
											"end": 143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 264,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 155,
											"end": 264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 251,
											"end": 256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 231,
											"end": 234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 224,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 264,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 270,
											"end": 388,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 270,
											"end": 388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 375,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 357,
											"end": 381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 352,
											"end": 355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 345,
											"end": 382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 270,
											"end": 388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 270,
											"end": 388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 394,
											"end": 648,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 394,
											"end": 648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 526,
											"end": 544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 554,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 638,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 636,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 623,
											"end": 640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 620,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 554,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 394,
											"end": 648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 648,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 654,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 654,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 764,
											"end": 782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 839,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 830,
											"end": 836,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 792,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 792,
											"end": 857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 654,
											"end": 864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 864,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 1092,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 870,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 990,
											"end": 999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1014,
											"end": 1085,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1014,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 870,
											"end": 1092,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 870,
											"end": 1092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 870,
											"end": 1092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 870,
											"end": 1092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 870,
											"end": 1092,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1098,
											"end": 1202,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1098,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1190,
											"end": 1195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1208,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1291,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1430,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1304,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1430,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1436,
											"end": 1513,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1436,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1513,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"becomeRichest()": "69934ee7",
							"mostSent()": "6886bf1c",
							"richest()": "02e26c38"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"becomeRichest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mostSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"richest\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":\"WithdrawalPatternTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\":{\"keccak256\":\"0xf7a047b8339edf707184ccb729a778b0795127cba22318276f272e0b0ea0f91a\",\"urls\":[\"bzz-raw://f7cfc81e8952f254feadca84b3d6db98ab96c27694eb47140434142ba519ef1a\",\"dweb:/ipfs/QmZ11F7GodNtuDB4xNWchwZ89GDjTcpt3jLH7FkdtLiwLw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol:WithdrawalPatternTest",
								"label": "richest",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol:WithdrawalPatternTest",
								"label": "mostSent",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol": {
				"ast": {
					"absolutePath": "solidity/Basic/014-WithdrawalPattern/withdrawal_pattern.sol",
					"exportedSymbols": {
						"WithdrawalPatternTest": [
							60
						]
					},
					"id": 61,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 60,
							"linearizedBaseContracts": [
								60
							],
							"name": "WithdrawalPatternTest",
							"nameLocation": "43:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "02e26c38",
									"id": 3,
									"mutability": "mutable",
									"name": "richest",
									"nameLocation": "94:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 60,
									"src": "71:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "71:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6886bf1c",
									"id": 5,
									"mutability": "mutable",
									"name": "mostSent",
									"nameLocation": "119:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 60,
									"src": "107:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "107:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "156:76:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "richest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "166:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 11,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "184:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "184:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 9,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "176:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "176:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "166:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "166:29:0"
											},
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "205:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 17,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "216:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "216:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "205:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "205:20:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "145:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:0:0"
									},
									"scope": 60,
									"src": "134:98:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "293:272:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 27,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "307:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "307:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 29,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "319:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "307:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 56,
													"nodeType": "Block",
													"src": "522:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "543:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 26,
															"id": 55,
															"nodeType": "Return",
															"src": "536:12:0"
														}
													]
												},
												"id": 57,
												"nodeType": "IfStatement",
												"src": "303:256:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "329:187:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 34,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "393:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "393:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 31,
																		"name": "richest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "376:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "376:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "376:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 37,
															"nodeType": "ExpressionStatement",
															"src": "376:27:0"
														},
														{
															"expression": {
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 38,
																	"name": "richest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "417:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 41,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "435:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 42,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "435:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "427:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 39,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "427:8:0",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "427:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "417:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "417:29:0"
														},
														{
															"expression": {
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 46,
																	"name": "mostSent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "460:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 47,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "471:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "471:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "460:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 50,
															"nodeType": "ExpressionStatement",
															"src": "460:20:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "501:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 26,
															"id": 52,
															"nodeType": "Return",
															"src": "494:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "69934ee7",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "becomeRichest",
									"nameLocation": "247:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "287:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:6:0"
									},
									"scope": 60,
									"src": "238:327:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 61,
							"src": "34:533:0",
							"usedErrors": []
						}
					],
					"src": "0:568:0"
				},
				"id": 0
			}
		}
	}
}